{
    "sourceFile": "src/components/artical/AddArtical.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1705972654549,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1705972654549,
            "name": "Commit-0",
            "content": "\"use client\";\nimport React, { useState, useRef } from \"react\";\nimport Tiptap from \"../common/Tiptap\";\nimport ArticalNav from \"./ArticalNav\";\nimport { Image } from \"lucide-react\";\nimport ImagePreview from \"./ImagePreview\";\nimport { useEditor } from \"@tiptap/react\";\nimport StarterKit from \"@tiptap/starter-kit\";\nimport Placeholder from \"@tiptap/extension-placeholder\";\nimport axios from \"axios\";\nimport { POST_URL } from \"@/lib/ApiEndPoints\";\nimport { CustomUser } from \"@/app/api/auth/[...nextauth]/authOptions\";\nimport { toast } from \"react-toastify\";\nimport { useRouter } from \"next/navigation\";\n\nexport default function AddArtical({ user }: { user: CustomUser }) {\n  const [title, setTitle] = useState<string>(\"\");\n  const [shortDes, setShortDes] = useState<string>(\"\");\n  const [loading, setLoading] = useState<boolean>(false);\n  const [image, setImage] = useState<File | null>(null);\n  const imageRef = useRef<HTMLInputElement | null>(null);\n  const [previewUrl, setPreviewUrl] = useState<string | undefined>();\n  const router = useRouter();\n\n  // * Editor setup\n  const editor = useEditor({\n    extensions: [\n      StarterKit,\n      Placeholder.configure({\n        placeholder: \"Escreva aqui....\",\n      }),\n    ],\n  });\n\n  const handleIconClick = () => {\n    imageRef.current?.click();\n  };\n  const handleImageChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const selectedFile = event.target.files?.[0];\n    if (selectedFile) {\n      setImage(selectedFile);\n      const imageUrl = URL.createObjectURL(selectedFile);\n      setPreviewUrl(imageUrl);\n    }\n  };\n\n  const removePreview = () => {\n    setImage(null);\n    setPreviewUrl(undefined);\n  };\n\n  // * Submit\n  const handleSubmit = () => {\n    setLoading(true);\n    const html = editor?.getHTML();\n    const formData = new FormData();\n    if (image) {\n      formData.append(\"image\", image);\n    }\n    formData.append(\"title\", title);\n    formData.append(\"short_description\", shortDes);\n    formData.append(\"content\", html ?? \"\");\n\n    axios\n      .post(POST_URL, formData, {\n        headers: {\n          Authorization: `Bearer ${user?.token}`,\n          Accept: \"application/json\",\n        },\n      })\n      .then((res) => {\n        setLoading(false);\n        toast.success(\"Publicação criada com sucesso!\", { theme: \"colored\" });\n        router.push(\"/dashboard\");\n      })\n      .catch((err) => {\n        setLoading(false);\n        toast.error(\"Ocorreu um erro não previsto!\", {\n          theme: \"colored\",\n        });\n      });\n  };\n\n  return (\n    <div>\n      <ArticalNav title={title} callback={handleSubmit} loading={loading} />\n      <div className=\"container\">\n        {previewUrl && (\n          <div className=\"mt-4\">\n            <ImagePreview url={previewUrl} callback={removePreview} />\n          </div>\n        )}\n        <div className=\"mt-4\">\n          <input\n            type=\"file\"\n            ref={imageRef}\n            className=\"hidden\"\n            accept=\"image/jpeg,image/png,image/webp,image/gif,image/jpg\"\n            onChange={handleImageChange}\n          />\n          <Image\n            onClick={handleIconClick}\n            height={20}\n            width={20}\n            className=\"cursor-pointer\"\n          />\n        </div>\n        <div className=\"mt-4\">\n          <input\n            className=\"outline-none h-10 text-4xl font-bold border-none w-full\"\n            placeholder=\"Titulo\"\n            onChange={(event) => setTitle(event.target.value)}\n          />\n        </div>\n        <div className=\"mt-4\">\n          <input\n            className=\"outline-none h-10 text-2xl font-bold border-none w-full\"\n            placeholder=\"Descrição\"\n            onChange={(event) => setShortDes(event.target.value)}\n          />\n        </div>\n        <div className=\"mt-4\">\n          <Tiptap editor={editor} />\n        </div>\n      </div>\n    </div>\n  );\n}\n"
        }
    ]
}